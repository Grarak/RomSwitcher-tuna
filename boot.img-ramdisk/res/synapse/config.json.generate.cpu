#!/sbin/busybox sh

MPS='0:"Disabled", 1:"1", 2:"2"'

cat << CTAG
{
    name:CPU,
    elements:[
	{ STitleBar:{
		title:"CPU Frequency"
	}},
	{ SLiveLabel:{
		refresh:500,
		action:"live cpufreq",
		style:"italic"
	}},
	{ STitleBar:{
		title:"CPU Temperature"
	}},
	{ SLiveLabel:{
		refresh:500,
		action:"live cputemp",
		style:"italic"
	}},
	{ STitleBar:{
		title:"Battery Temperature"
	}},
	{ SLiveLabel:{
		refresh:500,
		action:"live batterytemp",
		style:"italic"
	}},
	{ STitleBar:{
		title:"CPU Frequency scaling"
	}},
	{ SSeekBar:{
       		title:"CPU Max Frequency",
		description:"Set the maximum frequency the CPU scales up to.",
		default:`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq`,
		action:"generic /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq",
		values:{
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SSeekBar:{
       		title:"CPU Min Frequency",
		description:"Set the minimum frequency the CPU scales down to.",
		default:`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq`,
		action:"generic /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq",
		values:{
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SSeekBar:{
       		title:"CPU Max Screen Off Frequency",
		description:"Set the maximum frequency the CPU scales up to when the screen is off.",
		default:`cat /sys/devices/system/cpu/cpu0/cpufreq/screen_off_max_freq`,
		action:"generic /sys/devices/system/cpu/cpu0/cpufreq/screen_off_max_freq",
		values:{
`
			while read FREQ TIME; do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL}MHz\", "
			done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state
`
		}
	}},
	{ SPane:{
		title:"CPU Governor",
		description:"The CPU governor determines how the CPU behaves in response to changes in workload. Changing the governor will impact how the CPU scales through the frequency steps available to you CPU."
	}},
	{ SOptionList:{
                default:`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor`,
                action:"generic /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor",
                values:[
`
                        for GOVERNOR in \`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors\` ; do
				echo "\"$GOVERNOR\","
			done
`
                ]
        }},
	{ SPane:{
                title:"Multicore Power Saving",
                description:"Try to group tasks into the least cores possible. The higher it is, the more the aggression will be."
        }},
	{ SSeekBar:{
                default:`cat /sys/devices/system/cpu/sched_mc_power_savings`,
                action:"generic /sys/devices/system/cpu/sched_mc_power_savings",
		values:{
`
			echo $MPS
`
		}
        }},
	{ SPane:{
                title:"Temperature Limit",
                description:"Limit SOC highest temperature."
        }},
	{ SSeekBar:{
                min:60, max:80, unit:"Â°C",
                action:"tempcontrol /sys/class/misc/tempcontrol/templimit"
        }},
	{ SPane:{
                title:"Smartreflex",
                description:"Smartreflex is a power management technology developed by Texas Instruments. It dynamically undervolts to what it determines is the lowest stable voltage at each frequency."
        }},
	{ SCheckBox:{
                label:"Core",
                default:`cat /sys/kernel/debug/smartreflex/sr_core/autocomp`,
                action:"generic /sys/kernel/debug/smartreflex/sr_core/autocomp"
        }},
	{ SCheckBox:{
                label:"IVA",
                default:`cat /sys/kernel/debug/smartreflex/sr_core/autocomp`,
                action:"generic /sys/kernel/debug/smartreflex/sr_core/autocomp"
        }},
	{ SCheckBox:{
                label:"MPU",
                default:`cat /sys/kernel/debug/smartreflex/sr_core/autocomp`,
                action:"generic /sys/kernel/debug/smartreflex/sr_core/autocomp"
        }},
    ]
}
CTAG
